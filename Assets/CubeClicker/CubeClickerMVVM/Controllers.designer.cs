// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace CubeClicker {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UniRx;
    using uFrame.MVVM;
    using uFrame.Kernel;
    using uFrame.IOC;
    using uFrame.Serialization;
    using CubeClicker;
    
    
    public class TitleControllerBase : uFrame.MVVM.Controller {
        
        private uFrame.MVVM.IViewModelManager _TitleViewModelManager;
        
        [uFrame.IOC.InjectAttribute("Title")]
        public uFrame.MVVM.IViewModelManager TitleViewModelManager {
            get {
                return _TitleViewModelManager;
            }
            set {
                _TitleViewModelManager = value;
            }
        }
        
        public IEnumerable<TitleViewModel> TitleViewModels {
            get {
                return TitleViewModelManager.OfType<TitleViewModel>();
            }
        }
        
        public override void Setup() {
            base.Setup();
            // This is called when the controller is created
        }
        
        public override void Initialize(uFrame.MVVM.ViewModel viewModel) {
            base.Initialize(viewModel);
            // This is called when a viewmodel is created
            this.InitializeTitle(((TitleViewModel)(viewModel)));
        }
        
        public virtual TitleViewModel CreateTitle() {
            return ((TitleViewModel)(this.Create(Guid.NewGuid().ToString())));
        }
        
        public override uFrame.MVVM.ViewModel CreateEmpty() {
            return new TitleViewModel(this.EventAggregator);
        }
        
        public virtual void InitializeTitle(TitleViewModel viewModel) {
            // This is called when a TitleViewModel is created
            viewModel.GameStart.Action = this.GameStartHandler;
            TitleViewModelManager.Add(viewModel);
        }
        
        public override void DisposingViewModel(uFrame.MVVM.ViewModel viewModel) {
            base.DisposingViewModel(viewModel);
            TitleViewModelManager.Remove(viewModel);
        }
        
        public virtual void GameStart(TitleViewModel viewModel) {
        }
        
        public virtual void GameStartHandler(GameStartCommand command) {
            this.GameStart(command.Sender as TitleViewModel);
        }
    }
    
    public class CubeControllerBase : uFrame.MVVM.Controller {
        
        private uFrame.MVVM.IViewModelManager _CubeViewModelManager;
        
        [uFrame.IOC.InjectAttribute("Cube")]
        public uFrame.MVVM.IViewModelManager CubeViewModelManager {
            get {
                return _CubeViewModelManager;
            }
            set {
                _CubeViewModelManager = value;
            }
        }
        
        public IEnumerable<CubeViewModel> CubeViewModels {
            get {
                return CubeViewModelManager.OfType<CubeViewModel>();
            }
        }
        
        public override void Setup() {
            base.Setup();
            // This is called when the controller is created
        }
        
        public override void Initialize(uFrame.MVVM.ViewModel viewModel) {
            base.Initialize(viewModel);
            // This is called when a viewmodel is created
            this.InitializeCube(((CubeViewModel)(viewModel)));
        }
        
        public virtual CubeViewModel CreateCube() {
            return ((CubeViewModel)(this.Create(Guid.NewGuid().ToString())));
        }
        
        public override uFrame.MVVM.ViewModel CreateEmpty() {
            return new CubeViewModel(this.EventAggregator);
        }
        
        public virtual void InitializeCube(CubeViewModel viewModel) {
            // This is called when a CubeViewModel is created
            viewModel.ClickCube.Action = this.ClickCubeHandler;
            viewModel.ExpireCube.Action = this.ExpireCubeHandler;
            CubeViewModelManager.Add(viewModel);
        }
        
        public override void DisposingViewModel(uFrame.MVVM.ViewModel viewModel) {
            base.DisposingViewModel(viewModel);
            CubeViewModelManager.Remove(viewModel);
        }
        
        public virtual void ClickCube(CubeViewModel viewModel) {
        }
        
        public virtual void ExpireCube(CubeViewModel viewModel) {
        }
        
        public virtual void ClickCubeHandler(ClickCubeCommand command) {
            this.ClickCube(command.Sender as CubeViewModel);
        }
        
        public virtual void ExpireCubeHandler(ExpireCubeCommand command) {
            this.ExpireCube(command.Sender as CubeViewModel);
        }
    }
    
    public class GameHUDControllerBase : uFrame.MVVM.Controller {
        
        private uFrame.MVVM.IViewModelManager _GameHUDViewModelManager;
        
        [uFrame.IOC.InjectAttribute("GameHUD")]
        public uFrame.MVVM.IViewModelManager GameHUDViewModelManager {
            get {
                return _GameHUDViewModelManager;
            }
            set {
                _GameHUDViewModelManager = value;
            }
        }
        
        public IEnumerable<GameHUDViewModel> GameHUDViewModels {
            get {
                return GameHUDViewModelManager.OfType<GameHUDViewModel>();
            }
        }
        
        public override void Setup() {
            base.Setup();
            // This is called when the controller is created
        }
        
        public override void Initialize(uFrame.MVVM.ViewModel viewModel) {
            base.Initialize(viewModel);
            // This is called when a viewmodel is created
            this.InitializeGameHUD(((GameHUDViewModel)(viewModel)));
        }
        
        public virtual GameHUDViewModel CreateGameHUD() {
            return ((GameHUDViewModel)(this.Create(Guid.NewGuid().ToString())));
        }
        
        public override uFrame.MVVM.ViewModel CreateEmpty() {
            return new GameHUDViewModel(this.EventAggregator);
        }
        
        public virtual void InitializeGameHUD(GameHUDViewModel viewModel) {
            // This is called when a GameHUDViewModel is created
            GameHUDViewModelManager.Add(viewModel);
        }
        
        public override void DisposingViewModel(uFrame.MVVM.ViewModel viewModel) {
            base.DisposingViewModel(viewModel);
            GameHUDViewModelManager.Remove(viewModel);
        }
    }
    
    public class CubeSpawnControllerBase : uFrame.MVVM.Controller {
        
        private uFrame.MVVM.IViewModelManager _CubeSpawnViewModelManager;
        
        [uFrame.IOC.InjectAttribute("CubeSpawn")]
        public uFrame.MVVM.IViewModelManager CubeSpawnViewModelManager {
            get {
                return _CubeSpawnViewModelManager;
            }
            set {
                _CubeSpawnViewModelManager = value;
            }
        }
        
        public IEnumerable<CubeSpawnViewModel> CubeSpawnViewModels {
            get {
                return CubeSpawnViewModelManager.OfType<CubeSpawnViewModel>();
            }
        }
        
        public override void Setup() {
            base.Setup();
            // This is called when the controller is created
        }
        
        public override void Initialize(uFrame.MVVM.ViewModel viewModel) {
            base.Initialize(viewModel);
            // This is called when a viewmodel is created
            this.InitializeCubeSpawn(((CubeSpawnViewModel)(viewModel)));
        }
        
        public virtual CubeSpawnViewModel CreateCubeSpawn() {
            return ((CubeSpawnViewModel)(this.Create(Guid.NewGuid().ToString())));
        }
        
        public override uFrame.MVVM.ViewModel CreateEmpty() {
            return new CubeSpawnViewModel(this.EventAggregator);
        }
        
        public virtual void InitializeCubeSpawn(CubeSpawnViewModel viewModel) {
            // This is called when a CubeSpawnViewModel is created
            CubeSpawnViewModelManager.Add(viewModel);
        }
        
        public override void DisposingViewModel(uFrame.MVVM.ViewModel viewModel) {
            base.DisposingViewModel(viewModel);
            CubeSpawnViewModelManager.Remove(viewModel);
        }
    }
}
